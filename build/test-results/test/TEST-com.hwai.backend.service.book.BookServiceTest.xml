<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.hwai.backend.service.book.BookServiceTest" tests="3" skipped="0" failures="0" errors="0" timestamp="2022-02-14T07:36:17" hostname="DESKTOP-0R6UP8A" time="0.131">
  <properties/>
  <testcase name="책_대출_성공" classname="com.hwai.backend.service.book.BookServiceTest" time="0.104"/>
  <testcase name="책_대출_실패" classname="com.hwai.backend.service.book.BookServiceTest" time="0.008"/>
  <testcase name="책_저장_성공" classname="com.hwai.backend.service.book.BookServiceTest" time="0.017"/>
  <system-out><![CDATA[2022-02-14 16:36:17.362  INFO 16632 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.hwai.backend.service.book.BookServiceTest], using SpringBootContextLoader
2022-02-14 16:36:17.364  INFO 16632 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.hwai.backend.service.book.BookServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-02-14 16:36:17.364  INFO 16632 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.hwai.backend.service.book.BookServiceTest]: BookServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-02-14 16:36:17.369  INFO 16632 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.hwai.backend.Application for test class com.hwai.backend.service.book.BookServiceTest
2022-02-14 16:36:17.371  INFO 16632 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2022-02-14 16:36:17.373  INFO 16632 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@d92009a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@759110b6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@11161e68, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@225be923, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3f50ab22, org.springframework.test.context.transaction.TransactionalTestExecutionListener@42b908de, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@637dbbbf, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@1e925402, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@24a1f549, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2ed4e6fb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@20fa00dd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2cc46284, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@764c1e8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@e0e1cc1]
Hibernate: insert into user (admin, birth, email, name, pw, tel) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into category (genre, shelf) values (?, ?)
Hibernate: insert into book (category_id, current, due_date, title, user_id) values (?, ?, ?, ?, ?)
Hibernate: insert into book (category_id, current, due_date, title, user_id) values (?, ?, ?, ?, ?)
Hibernate: select user0_.id as id1_2_0_, user0_.admin as admin2_2_0_, user0_.birth as birth3_2_0_, user0_.email as email4_2_0_, user0_.name as name5_2_0_, user0_.pw as pw6_2_0_, user0_.tel as tel7_2_0_ from user user0_ where user0_.id=?
Hibernate: select book0_.id as id1_0_0_, book0_.category_id as category5_0_0_, book0_.current as current2_0_0_, book0_.due_date as due_date3_0_0_, book0_.title as title4_0_0_, book0_.user_id as user_id6_0_0_ from book book0_ where book0_.id=?
Hibernate: select book0_.id as id1_0_0_, book0_.category_id as category5_0_0_, book0_.current as current2_0_0_, book0_.due_date as due_date3_0_0_, book0_.title as title4_0_0_, book0_.user_id as user_id6_0_0_ from book book0_ where book0_.id=?
Hibernate: update book set category_id=?, current=?, due_date=?, title=?, user_id=? where id=?
Hibernate: update book set category_id=?, current=?, due_date=?, title=?, user_id=? where id=?
Hibernate: insert into user (admin, birth, email, name, pw, tel) values (?, ?, ?, ?, ?, ?)
Hibernate: select user0_.id as id1_2_0_, user0_.admin as admin2_2_0_, user0_.birth as birth3_2_0_, user0_.email as email4_2_0_, user0_.name as name5_2_0_, user0_.pw as pw6_2_0_, user0_.tel as tel7_2_0_ from user user0_ where user0_.id=?
Hibernate: select book0_.id as id1_0_0_, book0_.category_id as category5_0_0_, book0_.current as current2_0_0_, book0_.due_date as due_date3_0_0_, book0_.title as title4_0_0_, book0_.user_id as user_id6_0_0_ from book book0_ where book0_.id=?
Hibernate: insert into category (genre, shelf) values (?, ?)
Hibernate: insert into book (category_id, current, due_date, title, user_id) values (?, ?, ?, ?, ?)
Hibernate: select category0_.id as id1_1_0_, category0_.genre as genre2_1_0_, category0_.shelf as shelf3_1_0_ from category category0_ where category0_.id=?
Hibernate: insert into book (category_id, current, due_date, title, user_id) values (?, ?, ?, ?, ?)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
